Ý TƯỞNG: TA NHẬN THẤY SỐ LƯỢNG KÍ TỰ C LUÔN LUÔN >= N DIV 4 
	DO ĐÓ SỐ LƯỢNG C TẠI VỊ TRÍ I LUÔN LUÔN >= (N-I) DIV 4
	TA SẼ SỬ DỤNG CÔNG THỨC TRÊN ĐỂ ĐÁNH GIÁ NHÁNH CẬN KẾT HỢP VỚI 2 HÀM 
	SAME(J,K) : KIỂM TRA LẶP XÂU VỚI ĐỘ DÀI K
	CHECK(J) KIỂM TRA CÁC TH LẶP XÂU VỚI ĐỘ DÀI TỪ (1 -> J/2), NÓI CHUNG HỢP LỆ

PSEUDO CODE
	FOR c IN (A,B,C)	
		X[K] = c
		IF CHECK(K)
			T[K] = t[k-1] +IF('C',1,0)
			IF T[K] + (N-K)/4 < MIN_C
				IF K == N
					UPDATE RESULT,MIN_C
				ELSE 
					BACKTRACK(K+1)

CODE:

#include<stdio.h>
#include<stdlib.h>

int n;
char tmp[10001] ;
char res[10001];
int count[10001];
int minCount = 100000001;
int n = 10;

void update(){
	for(int i = 1;i <= n;i ++){
		res[i] = tmp[i];
	}
}
void print(){
	for(int i = 1;i <= n;i ++){
		printf("%c",res[i]);
	}
	printf("\nCount C: %d",minCount);
} 


int same(int k, int l){
	for(int i = 0;i < l;i ++){
		if(tmp[k-i] != tmp[k-l-i]) return 0;
	}
	return 1;
}

int check(int k){
	for(int l = 1;l <= k/2;l ++){
		if(same(k,l)) return 0;
	}
	return 1;
}


void backtrack(int k){
	for(char x = 'a' ; x <= 'c'; x++ ){
		tmp[k] = x;
		if(check(k)){
			count[k] = count[k-1] + (x == 'c' ? 1 : 0);
			if(count[k] + (n-k)/4 < minCount){
				if(k == n){
					update();
					minCount = count[k];
				} else {
					backtrack(k+1);
				}
			}
		}
	}
}

int main(){
	backtrack(1);
	print();
	return 0;
}