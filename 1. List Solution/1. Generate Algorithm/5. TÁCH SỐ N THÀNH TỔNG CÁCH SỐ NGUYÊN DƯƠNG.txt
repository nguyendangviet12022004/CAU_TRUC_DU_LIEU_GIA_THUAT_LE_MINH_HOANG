CẤU HÌNH ĐẦU : [N-1,1]
CẤU HÌNH CUỐI: [1,1,1,1,1,1,...,1]

Ý TƯỞNG:
	1) TÌM ĐẾN X[I] ĐẦU TIÊN TỪ PHẢI QUA KHÁC 1 
	2) GIẢM X[I] ĐI 1 
	3) CHIA ĐỀU CÁC SỐ CÒN LẠI BÊN PHẢI BẰNG X[I], CẦN THIÊT THÌ THÊM 1 SỐ DƯ



PSEUDO CODE: 

X := CẤU HÌNH ĐẦU [N-1,1]
SỐ LƯỢNG SỐ NGUYÊN DƯƠNG K := 2
WHILE(TRUE)
	IN CẤU HÌNH 
	TÌM VỊ TRÍ I ĐẦU TIÊN TỪ PHẢI QUA SAO CHO X[I] KHÁC 1
	IF CẤU HÌNH CUỐI I = 0
		BREAK
	X[I] --
	REMAIN := K - I + 1
	DIV := REMAIN / X[I]
	MOD := REMAIN % X[I]
	X[I+1 -> I+DIV] := X[I]
	K := I +  DIV
	IF MOD != 0
		X[++K] := MOD
	


CODE C
void generate(int n){
	int* x = malloc(sizeof(int)*(n+1));


	x[1] = n - 1;
	x[2] = 1;
	int k = 2;
	while(1){
		print(x,k);

		int i = k;
		while(i >= 1 && x[i] == 1) i --;


		if(i == 0) break;
		
		x[i] --;
		int remain = k - i + 1;
		int div = remain / x[i];
		int mod = remain % x[i];
		for(int j = i + 1;j <= i + div;j ++) x[j] = x[i];
		k = i + div;
		
		if(mod != 0){
			k ++;
			x[k] = mod;
		}
	}
}
